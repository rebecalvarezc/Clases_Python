*{
    margin: 0;
    padding: 0;
    font-family: 'Scheherazade New', serif;
    overflow-x: hidden;
}

.header{
    min-height: 100vh;
    /* vh: 	Relative to 1% of the height of the viewport.
    viewpoint = the browser window size. If the viewport is 50cm wide, 1vw = 0.5cm. */
    width: 100%;
    height: 100%;
    background-image: url(images/background2.jpg);
    background-position: center;
    background-size: cover;
    position: relative;
}

.nav{
    display: flex;
    padding: 2% 6%;
    justify-content: space-between;
    align-items: center;
}
.nav-link{
    flex: 1;
    text-align: right;
}
.nav-link ul li{
    list-style: none; /*No bullets*/
    display: inline-block; /*Horizontal*/
    padding: 1% 2%;
    position: relative;
}
.nav-link ul li a{
    color: #800000;
    text-decoration: none;
    font-size: 14px;
    font-weight: bold;
}
.nav-link ul li::after{
    content: '';
    width: 0%;
    height: 2px;
    background-color: bisque;
    display: block;
    margin: auto;
    transition: 0.2s;
}
/*::after creates a pseudo-element that is the last child of the selected element.
It is often used to add cosmetic content to an element with the content property.
It is inline by default.*/

.nav-link ul li:hover::after{
    width: 100%;
}

.text-box{
    width: 100%;
    color: white;
    background-color: rgba(102, 0, 0, 0.7);
    text-align: center;
    position: absolute; /*positioned relative to the nearest positioned ancestor.
    Moves along with page scrolling if no ancestor available.
    “don’t let this element sit in its normal position, ignore the order the HTML is written in and put
    it exactly where I say it should be in the window”*/
    top: 50%;
    transform: translate(-50, -50);
}
.text-box h1{
    font-size: 66px;
}
.text-box p{
    margin: 1px 0 5px; /*top, left/right bottom*/
    font-size: 16px;
    color: white;
}
.button{
    display: inline-block;
    text-decoration: none;
    color: white;
    border: 2px solid white;
    padding: 5px 30px;
    font-size: 14px;
    background: transparent;
    position: relative;
    cursor: pointer;
}
.button:hover{
    background-color: bisque;
    color: maroon;
    transition: 0.2s;
}

/*this is a media rule and is used in media queries to apply different styles for different media types/devices.
Media queries can be used to check: width and height of the viewport/device, orientation and resolution.
Used for delivering a tailored style sheet (responsive web design) to desktops, laptops, tablets, and mobile phones.
Can be used to specify that certain styles are only for printed documents or screen readers
*/
@media(max-width: 700px){
    .text-box h1{
    font-size: 24px;
}
    .text-box p{
        margin: 1px 0 5px; /*top, left/right bottom*/
        font-size: 11px;
    }
    .button{
        font-size: 9px;
    }
    .nav-link ul li{
        display: block;
        font-size: 9px;
    }
    .nav-link{
        position: absolute;
        background: rgba(255, 228, 196, 0.7);
        height: 100vh;
        width: 200px;
        top: 0;
        right: 0;
        text-align: left;
        z-index: 2;
    }
}